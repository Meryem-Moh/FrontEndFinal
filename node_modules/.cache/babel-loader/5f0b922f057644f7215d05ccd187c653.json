{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mustafa\\\\Documents\\\\MeritBankingService\\\\src\\\\MainPage\\\\Home.js\";\nimport React, { Component } from 'react';\nimport { ListGroup } from 'reactstrap';\nimport { Button, Flex, Box } from 'rebass';\nimport Merit from '../images/Merit.jpg';\nexport default class Home extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const url = 'http://localhost:9090/authenticate';\n      const data = {\n        username: this.state.username,\n        password: this.state.password\n      };\n      fetch(url, {\n        \"method\": \"POST\",\n        \"headers\": {\n          \"content-type\": \"application/json\"\n        },\n        \"body\": JSON.stringify(data)\n      }).then(response => response.json()).then(response => {\n        //check if we get a 200 ok status\n        console.log('status ' + JSON.stringify(response));\n\n        if (response.ok) {\n          let str = JSON.stringify(response);\n          const token = str.slice(8, -2);\n          localStorage.setItem('JWTToken', token);\n        } //const jwtToken = JSON.stringify(response);\n\n\n        this.props.history.push(\"User\");\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.state = {\n      username: '',\n      password: ''\n    };\n    this.register = this.register.bind(this);\n  }\n\n  register() {\n    this.props.history.push(\"Register\");\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"h1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: Merit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"input\",\n      type: \"text\",\n      placeholder: \"username\",\n      name: \"username\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"input\",\n      type: \"password\",\n      placeholder: \"password\",\n      name: \"password\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"button\",\n      type: \"submit\",\n      value: \"Log In\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button\",\n      onClick: this.register,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, \"Register\")));\n  }\n\n}\n/*\r\nimport React, { Component } from \"react\";\r\nimport { Button, Flex, Box } from 'rebass';\r\nimport { Card } from \"reactstrap\";\r\n\r\nimport Header from '../HeaderComponent';\r\nimport {ListGroup} from 'reactstrap';\r\n//import { Box, Flex } from 'rebass'\r\n\r\n\r\n//Login Page\r\nclass Home extends Component \r\n{\r\n  constructor(){\r\n    super();\r\n    this.state={ \r\n      username:'', \r\n      password:''\r\n    }\r\n    this.register = this.register.bind(this);\r\n\r\n  }\r\n\r\n  handleChange = event =>{\r\n    this.setState({ [event.target.name]:event.target.value })\r\n  }\r\n  handleSubmit = event =>{\r\n    event.preventDefault();\r\n    const url ='http://localhost:9090/authenticate'\r\n    const data = {\r\n      username:this.state.username,\r\n      password:this.state.password\r\n    }\r\n    fetch(url, {\r\n    \"method\": \"POST\",\r\n    \"headers\": {\r\n      \"content-type\": \"application/json\"\r\n    },\r\n    \"body\": JSON.stringify(data),\r\n  })\r\n  .then(response => response.json())\r\n  .then(response => {\r\n    //check if we get a 200 ok status\r\n    console.log('status '+JSON.stringify(response))\r\n    if(response.ok){\r\n    }\r\n    //const jwtToken = JSON.stringify(response);\r\n    let str = JSON.stringify(response);\r\n    const token = str.slice(8,-2);\r\n    localStorage.setItem('JWTToken', token);\r\n    //this.props.history.push(\"User\");\r\n    window.location.replace(\"User\")\r\n  })\r\n  .catch(err => {\r\n    console.log(err);\r\n  });\r\n  }\r\n  register() {\r\n    this.props.history.push(\"Register\");\r\n  }\r\n\r\n  \r\n\r\n  render() \r\n  {\r\n    return(\r\n\r\n    <div>\r\n     \r\n\r\n\r\n  <Flex\r\n    sx={{\r\n      flexDirection: 'column',\r\n      minHeight: '100vh'\r\n    }}>\r\n    <Box\r\n      sx={{\r\n        display: 'grid',\r\n        flex: 1,\r\n        minHeight: '100vh',\r\n        gridTemplateAreas: [\r\n          '\"long-box long-box\" \"left-box right-box\" \"wide-box wide-box\"',\r\n          '\"long-box long-box left-box right-box\" \"long-box long-box wide-box wide-box\"'\r\n        ],\r\n        gridTemplateColumns: [\r\n          'repeat(2, 1fr)',\r\n          'repeat(4, 1fr)'\r\n        ],\r\n        gridTemplateRows: [\r\n          '2fr 1fr 1fr',\r\n          'none'\r\n        ],\r\n        gridGap: 20,\r\n        margin: 20\r\n      }}>\r\n      <Box\r\n        sx={{\r\n          flex: 1,\r\n          gridArea: 'long-box'\r\n        }}>\r\n        Long Box\r\n      </Box>\r\n      <Box\r\n        sx={{\r\n          flex: 1,\r\n          gridArea: 'left-box'\r\n        }}>\r\n        Box Left\r\n      </Box>\r\n      <Box\r\n        sx={{\r\n          flex: 1,\r\n          gridArea: 'right-box'\r\n        }}>\r\n        Box Right\r\n      </Box>\r\n      <Box\r\n        sx={{\r\n          flex: 1,\r\n          gridArea: 'wide-box'\r\n        }}>\r\n      \r\n\r\n      <form onSubmit={this.handleSubmit}>\r\n        <ListGroup className = 'card'>\r\n            <input className = 'input' type='text' placeholder = 'username' name='username' onChange={this.handleChange} />\r\n            <input className = 'input' type='password' placeholder = 'password' name='password' onChange={this.handleChange} />\r\n            <input className = 'button' type='submit' value='Log In' />\r\n            <button className = 'button' onClick={this.register}>\r\n              Register\r\n            </button>\r\n        </ListGroup>\r\n      </form>\r\n      </Box>\r\n    </Box>\r\n  </Flex>\r\n    </div>\r\n    )\r\n}\r\n\r\n}\r\n\r\nexport default Home;\r\n\r\n*/","map":{"version":3,"sources":["C:/Users/Mustafa/Documents/MeritBankingService/src/MainPage/Home.js"],"names":["React","Component","ListGroup","Button","Flex","Box","Merit","Home","constructor","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","url","data","username","state","password","fetch","JSON","stringify","then","response","json","console","log","ok","str","token","slice","localStorage","setItem","props","history","push","catch","err","register","bind","render"],"mappings":"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","sourcesContent":["\r\n\r\nimport React, { Component } from 'react';\r\nimport {ListGroup} from 'reactstrap';\r\nimport { Button, Flex, Box } from 'rebass';\r\n\r\nimport Merit from '../images/Merit.jpg';\r\n\r\n\r\n\r\n\r\nexport default class Home extends Component{\r\nconstructor(){\r\n  super();\r\n  this.state={ \r\n    username:'', \r\n    password:''\r\n  }\r\n  this.register = this.register.bind(this);\r\n}\r\nhandleChange = event =>{\r\n  this.setState({ [event.target.name]:event.target.value })\r\n}\r\nhandleSubmit = event =>{\r\n  event.preventDefault();\r\n  const url ='http://localhost:9090/authenticate'\r\n  const data = {\r\n    username:this.state.username,\r\n    password:this.state.password\r\n  }\r\n  fetch(url, {\r\n  \"method\": \"POST\",\r\n  \"headers\": {\r\n    \"content-type\": \"application/json\"\r\n  },\r\n  \"body\": JSON.stringify(data),\r\n})\r\n.then(response => response.json())\r\n.then(response => {\r\n  //check if we get a 200 ok status\r\n  console.log('status '+JSON.stringify(response))\r\n  if(response.ok){\r\n    let str = JSON.stringify(response);\r\n  const token = str.slice(8,-2);\r\n  localStorage.setItem('JWTToken', token);\r\n  \r\n  \r\n\r\n\r\n  }\r\n  //const jwtToken = JSON.stringify(response);\r\n  this.props.history.push(\"User\");\r\n})\r\n.catch(err => {\r\n  console.log(err);\r\n});\r\n}\r\nregister() {\r\n  this.props.history.push(\"Register\");\r\n}\r\nrender(){\r\n  return(\r\n    <div>\r\n      <h1 className = 'h1'>\r\n             </h1>\r\n     \r\n      <img src={Merit}></img>\r\n  \r\n      <form onSubmit={this.handleSubmit}>\r\n      \r\n            <input className = 'input' type='text' placeholder = 'username' name='username' onChange={this.handleChange} />\r\n            <input className = 'input' type='password' placeholder = 'password' name='password' onChange={this.handleChange} />\r\n            <input className = 'button' type='submit' value='Log In' />\r\n            <button className = 'button' onClick={this.register}>\r\n              Register\r\n            </button>\r\n       \r\n      </form>\r\n    </div>\r\n  )}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nimport React, { Component } from \"react\";\r\nimport { Button, Flex, Box } from 'rebass';\r\nimport { Card } from \"reactstrap\";\r\n\r\nimport Header from '../HeaderComponent';\r\nimport {ListGroup} from 'reactstrap';\r\n//import { Box, Flex } from 'rebass'\r\n\r\n\r\n//Login Page\r\nclass Home extends Component \r\n{\r\n  constructor(){\r\n    super();\r\n    this.state={ \r\n      username:'', \r\n      password:''\r\n    }\r\n    this.register = this.register.bind(this);\r\n\r\n  }\r\n\r\n  handleChange = event =>{\r\n    this.setState({ [event.target.name]:event.target.value })\r\n  }\r\n  handleSubmit = event =>{\r\n    event.preventDefault();\r\n    const url ='http://localhost:9090/authenticate'\r\n    const data = {\r\n      username:this.state.username,\r\n      password:this.state.password\r\n    }\r\n    fetch(url, {\r\n    \"method\": \"POST\",\r\n    \"headers\": {\r\n      \"content-type\": \"application/json\"\r\n    },\r\n    \"body\": JSON.stringify(data),\r\n  })\r\n  .then(response => response.json())\r\n  .then(response => {\r\n    //check if we get a 200 ok status\r\n    console.log('status '+JSON.stringify(response))\r\n    if(response.ok){\r\n    }\r\n    //const jwtToken = JSON.stringify(response);\r\n    let str = JSON.stringify(response);\r\n    const token = str.slice(8,-2);\r\n    localStorage.setItem('JWTToken', token);\r\n    //this.props.history.push(\"User\");\r\n    window.location.replace(\"User\")\r\n  })\r\n  .catch(err => {\r\n    console.log(err);\r\n  });\r\n  }\r\n  register() {\r\n    this.props.history.push(\"Register\");\r\n  }\r\n\r\n  \r\n\r\n  render() \r\n  {\r\n    return(\r\n\r\n    <div>\r\n     \r\n\r\n\r\n  <Flex\r\n    sx={{\r\n      flexDirection: 'column',\r\n      minHeight: '100vh'\r\n    }}>\r\n    <Box\r\n      sx={{\r\n        display: 'grid',\r\n        flex: 1,\r\n        minHeight: '100vh',\r\n        gridTemplateAreas: [\r\n          '\"long-box long-box\" \"left-box right-box\" \"wide-box wide-box\"',\r\n          '\"long-box long-box left-box right-box\" \"long-box long-box wide-box wide-box\"'\r\n        ],\r\n        gridTemplateColumns: [\r\n          'repeat(2, 1fr)',\r\n          'repeat(4, 1fr)'\r\n        ],\r\n        gridTemplateRows: [\r\n          '2fr 1fr 1fr',\r\n          'none'\r\n        ],\r\n        gridGap: 20,\r\n        margin: 20\r\n      }}>\r\n      <Box\r\n        sx={{\r\n          flex: 1,\r\n          gridArea: 'long-box'\r\n        }}>\r\n        Long Box\r\n      </Box>\r\n      <Box\r\n        sx={{\r\n          flex: 1,\r\n          gridArea: 'left-box'\r\n        }}>\r\n        Box Left\r\n      </Box>\r\n      <Box\r\n        sx={{\r\n          flex: 1,\r\n          gridArea: 'right-box'\r\n        }}>\r\n        Box Right\r\n      </Box>\r\n      <Box\r\n        sx={{\r\n          flex: 1,\r\n          gridArea: 'wide-box'\r\n        }}>\r\n      \r\n\r\n      <form onSubmit={this.handleSubmit}>\r\n        <ListGroup className = 'card'>\r\n            <input className = 'input' type='text' placeholder = 'username' name='username' onChange={this.handleChange} />\r\n            <input className = 'input' type='password' placeholder = 'password' name='password' onChange={this.handleChange} />\r\n            <input className = 'button' type='submit' value='Log In' />\r\n            <button className = 'button' onClick={this.register}>\r\n              Register\r\n            </button>\r\n        </ListGroup>\r\n      </form>\r\n      </Box>\r\n    </Box>\r\n  </Flex>\r\n    </div>\r\n    )\r\n}\r\n\r\n}\r\n\r\nexport default Home;\r\n\r\n*/"]},"metadata":{},"sourceType":"module"}